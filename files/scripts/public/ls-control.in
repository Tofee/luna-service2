#!/bin/sh
# Copyright (c) 2008-2018 LG Electronics, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

SCAN_SERVICES="false"
SCAN_VOLATILE_DIRS="false"

case x$1 in
    xscan-services)
        SCAN_SERVICES="true"
        ;;
    xscan-volatile-dirs)
        SCAN_VOLATILE_DIRS="true"
        ;;

    *)
        echo "Options:"
        echo "     scan-services            tell the hub to reload settings and rescan all directories"
        echo "     scan-volatile-dirs       tell the hub to scan and load manifests from volatile directories"
        exit 0
esac

if [ "x$SCAN_SERVICES" = "xtrue" -o "x$SCAN_VOLATILE_DIRS" = "xtrue" ]
then
    TMP_OUT=`mktemp -t`

    luna-send -n 2 luna://com.webos.service.bus/signal/addmatch \
        '{"category":"/com/palm/hub/control","method":"configScanComplete"}' > ${TMP_OUT} 2>&1 &

    PID="$!"

    # wait for subscribe success return from hub
    RETURN="false"
    while [ 1 ]
    do
        LINE_CNT=`sed -n '$=' ${TMP_OUT}`

        if [ "x${LINE_CNT}" != "x" ]
        then
            RETURN=`sed -n 's/.*"returnValue"\s*:\s*\(true\|false\).*/\1/p' ${TMP_OUT}`
            break
        fi

        # sleep for 10 ms if we have usleep, otherwise 1 second
        usleep 10000 > /dev/null 2>&1 || sleep 1
    done

    if [ "x${RETURN}" == "xtrue" ]
    then
        if [ "x$SCAN_SERVICES" = "xtrue" ]; then
            echo "telling hub to reload setting and rescan all directories"
            kill -HUP $(pidof ls-hubd)
        elif [ "x$SCAN_VOLATILE_DIRS" = "xtrue" ]; then
            echo "telling hub to scan manifests from volatile directories"
            kill -USR1 $(pidof ls-hubd)
        fi
    else
        # Error occurred during luna-send
        cat ${TMP_OUT}
    fi

    wait ${PID}

    rm -f ${TMP_OUT}
fi
